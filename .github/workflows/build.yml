name: Build
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the current repo files and
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      # Install node requirements and then install jupyter, other packages
      - run: npm install
      - run: npm install -g configurable-http-proxy
      - run: python -m pip install -U jupyterhub jupyterlab jupyterhub-dummyauthenticator
      - run: python -m pip install aiosqlite

      # Install the extension and check that it installed correctly
      - run: pip install .
      - run: pip list | grep jupyterhub-entrypoint

      # Download and install gecko web driver
      - run: wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
      - run: sudo tar -xzf geckodriver-v0.26.0-linux64.tar.gz -C /usr/bin
      - run: sudo chmod a+x /usr/bin/geckodriver

      # Install python packages
      - run: pip install selenium
      - run: pip install pytest

      # Setup the config file
      - run: echo "c.JupyterHub.services=[{'name':'entrypoint','url':'http://127.0.0.1:8889','command':['python', '-m', 'jupyterhub_entrypoint'] }]" > jupyterhub_config.py
      - run: echo "c.JupyterHub.authenticator_class = 'dummyauthenticator.DummyAuthenticator'" >> jupyterhub_config.py
      - run: echo "c.EntrypointService.tags=[{'tag_name':'multivac','display_name':'Multivac'}]" >> entrypoint_config.py
#     - run: echo "c.EntrypointService.entrypoint_types = [{'name':'conda','display_name':'Conda','mutable':True,'cmd_template':'{path}/bin/jupyterlab-hub','help_link':''}]" >> entrypoint_config.py
      - run: echo "c.EntrypointService.types=[('jupyterhub_entrypoint.types.TrustedScriptEntrypointType', ('/usr/local/bin/example-entrypoint.sh',))]" >> entrypoint_config.py
      - run: sudo echo 'exec "$@"' > /usr/local/bin/example-entrypoint.sh
      - run: sudo chmod a+x /usr/local/bin/example-entrypoint.sh

      - run: cat jupyterhub_config.py
      - run: cat entrypoint_config.py
      
      # Start jupyterhub and run pytests
      - run: jupyterhub &
      - run: pytest tests/test.py
      
